/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package psyriccio.vidj;

import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.border.BevelBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.openimaj.image.DisplayUtilities;
import org.openimaj.image.MBFImage;
import org.openimaj.video.Video;
import org.openimaj.video.VideoDisplay;
import org.openimaj.video.xuggle.XuggleVideo;

/**
 *
 * @author psyriccio
 */
public class MainForm extends javax.swing.JFrame {

    private Video<MBFImage> video = null;
    private File videoFile = null;
    private VideoDisplay<MBFImage> display;
    private DisplayUtilities.ImageComponent displayComponent;
    private List<MBFImage> frames;
    private int position;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        jProgressBarFrames.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelInfo = new javax.swing.JLabel();
        jProgressBarFrames = new javax.swing.JProgressBar();
        jMenuBarMain = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuFileNew = new javax.swing.JMenuItem();
        jMenuFileOpen = new javax.swing.JMenuItem();
        jMenuFileSave = new javax.swing.JMenuItem();
        jMenuFileSaveAs = new javax.swing.JMenuItem();
        jMenuFileExit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("vidj");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabelInfo.setText("   ");

        jMenuFile.setText("File");

        jMenuFileNew.setText("New...");
        jMenuFile.add(jMenuFileNew);

        jMenuFileOpen.setText("Open...");
        jMenuFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuFileOpen);

        jMenuFileSave.setText("Save");
        jMenuFile.add(jMenuFileSave);

        jMenuFileSaveAs.setText("Save as...");
        jMenuFile.add(jMenuFileSaveAs);

        jMenuFileExit.setText("Exit");
        jMenuFile.add(jMenuFileExit);

        jMenuBarMain.add(jMenuFile);

        jMenuEdit.setText("Edit");
        jMenuBarMain.add(jMenuEdit);

        setJMenuBar(jMenuBarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarFrames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarFrames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 474, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setMenuItemsAvailability() {
        boolean videoPresent = (video != null);
        jMenuEdit.setEnabled(videoPresent);
        jMenuFileSave.setEnabled(videoPresent);
        jMenuFileSaveAs.setEnabled(videoPresent);
    }

    private String getVideoDimensions() {
        if (video != null) {
            return Integer.toString(video.getWidth()) + "x" + Integer.toString(video.getHeight());
        } else {
            return "";
        }
    }

    private String getVideoDescription() {
        if (video != null) {
            XuggleVideo xvid = (XuggleVideo) video;
            return xvid.getCurrentFrame().getColourSpace().toString();
        } else {
            return "";
        }
    }

    private void updateInfo() {
        if (video != null) {
            this.setTitle(videoFile.getName());
            jLabelInfo.setText(
                    getVideoDescription() + " "
                    + getVideoDimensions() + " "
                    + Double.toString(video.getFPS()) + " FPS ["
                    + Integer.toString(video.getCurrentFrameIndex()) + "/"
                    + Long.toString(video.countFrames()) + "]");
        }
    }

    private void openFile() {
        JFileChooser fileCh = new JFileChooser();
        fileCh.setFileFilter(
                new FileNameExtensionFilter("Video files", "avi", "mkv", "mp4", "flv", "webm")
        );
        int retVal = fileCh.showOpenDialog(this);
        if (retVal == JFileChooser.APPROVE_OPTION) {
            videoFile = fileCh.getSelectedFile();
            video = new XuggleVideo(videoFile);
        }
        updateInfo();
        displayComponent = new DisplayUtilities.ImageComponent();
        this.add(displayComponent);
        displayComponent.setBounds(0, 0, video.getWidth(), video.getHeight());
        displayComponent.setBorder(new BevelBorder(1));
        display = new VideoDisplay<MBFImage>(video, displayComponent);
        this.pack();
        this.frames = new ArrayList<>();
        jProgressBarFrames.setMaximum((int) video.countFrames());
        jProgressBarFrames.setValue(0);
        jProgressBarFrames.setVisible(true);
        video.forEach((frame) -> {
            this.frames.add(frame);
            jProgressBarFrames.setValue(jProgressBarFrames.getValue()+1);
        });
        jProgressBarFrames.setVisible(false);
        this.position = 0;
    }

    private void updateDisplay() {
        MBFImage curFrame = frames.get(this.position);
        BufferedImage img = new BufferedImage(video.getWidth(), video.getHeight(), BufferedImage.TYPE_INT_ARGB);
        img.setRGB(0, 0, curFrame.getWidth(), curFrame.getHeight(), curFrame.flatten().toPackedARGBPixels(), 0, 0);
        displayComponent.setImage(img);
    }

    private void nextFrame() {
        if (video != null) {
            if (this.position < this.frames.size() - 1) {
                this.position++;
                updateDisplay();
                updateInfo();
            }
        }
    }

    private void jMenuFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileOpenActionPerformed
        openFile();
        setMenuItemsAvailability();
    }//GEN-LAST:event_jMenuFileOpenActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            nextFrame();
        }
    }//GEN-LAST:event_formKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JMenuBar jMenuBarMain;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuFileExit;
    private javax.swing.JMenuItem jMenuFileNew;
    private javax.swing.JMenuItem jMenuFileOpen;
    private javax.swing.JMenuItem jMenuFileSave;
    private javax.swing.JMenuItem jMenuFileSaveAs;
    private javax.swing.JProgressBar jProgressBarFrames;
    // End of variables declaration//GEN-END:variables
}
